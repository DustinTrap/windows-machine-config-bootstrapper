FROM registry.svc.ci.openshift.org/ocp/builder:rhel-8-golang-1.15-openshift-4.6 as build
LABEL stage=build
WORKDIR /build/

# Build kubelet.exe
RUN git clone --branch release-4.6 https://github.com/openshift/kubernetes.git
WORKDIR /build/kubernetes/
# TODO: Checking out commit before go1.15 became a requirement, revert checkout in https://issues.redhat.com/browse/WINC-460
RUN git checkout f5121a6a6a02ddfafd2bfbf5201b092dc5097ab0
RUN KUBE_BUILD_PLATFORMS=windows/amd64 make WHAT=cmd/kubelet

# Build hybrid-overlay-node.exe
WORKDIR /build/
RUN git clone --branch release-4.6 --single-branch https://github.com/openshift/ovn-kubernetes.git
WORKDIR /build/ovn-kubernetes/go-controller/
RUN make windows

# Build CNI plugins
WORKDIR /build/
RUN git clone --branch release-4.6 --single-branch https://github.com/openshift/containernetworking-plugins
WORKDIR /build/containernetworking-plugins/
ENV CGO_ENABLED=0
RUN ./build_windows.sh

WORKDIR /build/
COPY . .

# Build WMCB unit and e2e tests
RUN make build-wmcb-unit-test
RUN make build-wmcb-e2e-test

# Build TestWMCB binary to run the tests on the Windows VM created
WORKDIR /build/internal/test/wmcb/
RUN CGO_ENABLED=0 GO111MODULE=on go test -c -run=TestWMCB -timeout=30m . -o test-wmcb

FROM registry.svc.ci.openshift.org/ocp/builder:rhel-8-golang-1.15-openshift-4.6 as testing
LABEL stage=testing

WORKDIR /payload/cni
COPY --from=build /build/containernetworking-plugins/bin/flannel.exe .
COPY --from=build /build/containernetworking-plugins/bin/host-local.exe .
COPY --from=build /build/containernetworking-plugins/bin/win-bridge.exe .
COPY --from=build /build/containernetworking-plugins/bin/win-overlay.exe .

WORKDIR /payload
COPY internal/test/wmcb/powershell/ .
COPY --from=build /build/ovn-kubernetes/go-controller/_output/go/bin/windows/hybrid-overlay-node.exe .
COPY --from=build /build/kubernetes/_output/local/bin/windows/amd64/kubelet.exe .
COPY --from=build /build/wmcb_unit_test.exe .
COPY --from=build /build/wmcb_e2e_test.exe .

WORKDIR /test
COPY internal/test/wmcb/templates templates
COPY --from=build /build/internal/test/wmcb/test-wmcb .

ENV PATH="${PATH}:/test"

ENTRYPOINT ["/bin/bash"]
